{
    "endpoint":"https://gitlab.com/api/v4",
    "platform":"gitlab",
    "token":"xxxxxx",
    "logLevel":"debug",
    "gitAuthor":"user@gmail.com",
    "prFooter":"Generated by [Renovate Bot](https://renovatebot.com) self-hosted in [renovate sample](https://gitlab.com/openshift/renovate-sample)",  
    "onboardingConfig":{
        "extends":[
          "config:base",
          ":automergeBranch",
          ":prHourlyLimit1",
          ":rebaseStalePrs",
          "docker:enableMajor",
          ":disableRateLimiting",
          ":dependencyDashboard",
          ":semanticCommits",
          ":separatePatchReleases",
          ":enablePreCommit"
        ]
    },
    "extends":[
        "config:base",
        ":automergeBranch",
        ":prHourlyLimit1",
        ":rebaseStalePrs",
        "docker:enableMajor",
        ":disableRateLimiting",
        ":dependencyDashboard",
        ":semanticCommits",
        ":separatePatchReleases",
        ":enablePreCommit"
    ],
    "repositories":[
        "ajaykanse/renovate-example"
    ],
    "dependencyDashboard":true,
    "dependencyDashboardTitle":"Renovate Dashboard",
    "labels":[
        "RenovateBot"
    ],
    
        "dockerfile": {
          "fileMatch": ["(^|/|\\.)Dockerfile$", "(^|/)Dockerfile[^/]*$"]
        },
      
    "regexManagers":[
        {
          "fileMatch":[
              "images.yml"
          ],
          "matchStrings":[
            "# renovate: datasource=(?<datasource>\\S+) image=(?<depname>\\S+) versioning=(?<versioning>\\S+)?\n.*?- [^:]*:(?<currentvalue>.*)"
          ],
          "datasourceTemplate":"{{#if datasource}}{{{datasource}}}{{else}}docker{{/if}}",
          "versioningTemplate":"{{#if versioning}}{{{versioning}}}{{else}}semver{{/if}}"
        }
    ],
    "enabledManagers":[
        "regex",
        "helm",
        "dockerfile"
    ],
    "packageRules":[
        {
          "matchUpdateType":[
              "major"
          ],
          "labels":[
              "type/major"
          ]
        },
        {
          "matchUpdateType":[
              "minor"
          ],
          "labels":[
              "type/minor"
          ]
        },
        {
          "matchUpdateType":[
              "patch"
          ],
          "labels":[
              "type/patch"
          ]
        },
        {
          "matchUpdateType":[
              "docker"
          ],
          "labels":[
              "renovate/image"
          ]
        },
        {
          "matchDataSources":[
              "docker"
          ],
          "commitMessageTopic":"Image {{depName}}"
        },
        {
          "matchDatasources":[
              "docker"
          ],
          "matchUpdateTypes":[
              "major"
          ],
          "commitMessagePrefix":":arrow_up: feat(image)!: "
        },
        {
          "matchDatasources":[
              "docker"
          ],
          "matchUpdateTypes":[
              "minor"
          ],
          "semanticCommitType":":arrow_up: feat",
          "semanticCommitScope":"image"
        },
        {
          "matchDatasources":[
              "docker"
          ],
          "matchUpdateTypes":[
              "patch"
          ],
          "semanticCommitType":":arrow_up: fix",
          "semanticCommitScope":"image"
        },
        {
          "matchDatasources":[
              "helm"
          ],
          "matchUpdateTypes":[
              "major"
          ],
          "commitMessagePrefix":":arrow_up: feat(helm)!: "
        },
        {
          "matchDatasources":[
              "helm"
          ],
          "matchUpdateTypes":[
              "minor"
          ],
          "semanticCommitType":":arrow_up: feat",
          "semanticCommitScope":"helm"
        },
        {
          "matchDatasources":[
              "helm"
          ],
          "matchUpdateTypes":[
              "patch"
          ],
          "semanticCommitType":":arrow_up: fix",
          "semanticCommitScope":"helm"
        },
        {
          "updateTypes":[
              "rollback"
          ],
          "semanticCommitType":":arrow_down:"
        },
        {
          "updateTypes":[
              "digest",
              "bump"
          ],
          "semanticCommitType":":bookmark:"
        }
    ],
    "commitMessageTopic":"{{depName}}",
    "commitMessageExtra":"to {{newVersion}}",
    "commitMessageSuffix":"",
    "semanticCommitType":":arrow_up:",
    "semanticCommitScope":null
    }
